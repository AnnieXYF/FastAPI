# pydantic 是用来做数据处理 （定义数据结构，并进行输入数据的验证和转换）
# starlette 是负责web 部分 （web应用和API）

# HTTP 协议 （超文本传输协议）
1. 发生于：浏览器与服务器之间
2. 特性：
a. 基于TCP/IP协议： 这两个协议相当于确定好沟通语言，在这个基础上又明确用HTTP这个应用层协议 (七言)
b. 基于请求-响应协议：先有请求再有响应 （有请求必有响应）
c. 无状态保存： 不保存任何通信状态
d. 长链接：多个请求复用一个TCP链接

3. 请求协议和响应协议
 a. 请求协议: 浏览器发给服务器
 1） 请求首行：请求方式 （get/post) + 完整URL （协议 https，ip（www.baidu.com)，端口(默认80），路径（/path），参数（？之后））+协议版本
 2） 请求头：请求键值对分别独占一行
 content-type: 告诉浏览器请求体数据的格式 （application/jason或者text/html）
 3） 请求体：先空一行；post 请求需要发送的信息；get请求没有请求体只能发送在路径参数中

 a. 响应协议: 服务器发给浏览器
 1） 响应首行：协议版本 + 200 ok
 2） 响应头：请求键值对分别独占一行
 content-type: 告诉客户端响应体数据的格式
 3） 响应体：先空一行；响应的内容

# get 和 post 的区别
参数传递方式：GET 请求通过 URL 查询字符串传递参数，POST 请求通过请求主体传递参数。
安全性：GET 请求的参数在 URL 中可见，不适合传输敏感信息；POST 请求的数据在请求主体中，安全性更高。
使用场景：GET 适合请求数据、展示页面；POST 适合提交数据、修改服务器状态

4. API 接口 （应用程序对外提供一个操作数据的入口）
其往往是一个函数，类方法或者url或其他网络地址

5. Restful （一种API接口的设计风格--面向资源开发 ）
get 查看
post 更新
delete 删除
通过请求方式来表达对数据的操作而不是通过参数

